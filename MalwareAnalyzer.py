import os
import hashlib
import pefile

def calculate_md5(file_path):
    with open(file_path, 'rb') as f:
        data = f.read()
        return hashlib.md5(data).hexdigest()

def perform_static_analysis(file_path):
    try:
        pe = pefile.PE(file_path)

        print("General Information:")
        print("MD5: ", calculate_md5(file_path))
        print("File Size: ", os.path.getsize(file_path))
        print("Entry Point: ", hex(pe.OPTIONAL_HEADER.AddressOfEntryPoint))
        print("Number of Sections: ", pe.FILE_HEADER.NumberOfSections)
        print("Image Base: ", hex(pe.OPTIONAL_HEADER.ImageBase))
        print("")

        print("Imported Functions:")
        for entry in pe.DIRECTORY_ENTRY_IMPORT:
            print(entry.dll.decode('utf-8'))
            for imp in entry.imports:
                print(hex(imp.address), imp.name.decode('utf-8'))
            print("")

        print("Exported Functions:")
        if hasattr(pe, 'DIRECTORY_ENTRY_EXPORT'):
            for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
                print(hex(pe.OPTIONAL_HEADER.ImageBase + exp.address), exp.name.decode('utf-8'))
            print("")

    except pefile.PEFormatError as e:
        print("Error: Invalid PE file format -", str(e))

file_path = input("Enter the path to the malware sample file: ")
perform_static_analysis(file_path)
